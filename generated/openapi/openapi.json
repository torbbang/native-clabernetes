{
    "openapi": "3.0.3",
    "info": {
        "description": "clabernetes openapi v3 spec",
        "title": "clabernetes api",
        "version": "0.0.0"
    },
    "components": {
        "schemas": {
            "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions": {
                "description": "DeleteOptions may be provided when deleting an API object.",
                "properties": {
                    "apiVersion": {
                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                        "type": "string"
                    },
                    "dryRun": {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "items": {
                            "default": "",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "gracePeriodSeconds": {
                        "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "kind": {
                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                    },
                    "orphanDependents": {
                        "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
                        "type": "boolean"
                    },
                    "preconditions": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions"
                            }
                        ],
                        "description": "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned."
                    },
                    "propagationPolicy": {
                        "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1": {
                "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                "type": "object"
            },
            "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta": {
                "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
                "properties": {
                    "continue": {
                        "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
                        "type": "string"
                    },
                    "remainingItemCount": {
                        "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "resourceVersion": {
                        "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                        "type": "string"
                    },
                    "selfLink": {
                        "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry": {
                "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
                "properties": {
                    "apiVersion": {
                        "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                        "type": "string"
                    },
                    "fieldsType": {
                        "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                        "type": "string"
                    },
                    "fieldsV1": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1"
                            }
                        ],
                        "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type."
                    },
                    "manager": {
                        "description": "Manager is an identifier of the workflow managing these fields.",
                        "type": "string"
                    },
                    "operation": {
                        "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                        "type": "string"
                    },
                    "subresource": {
                        "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                        "type": "string"
                    },
                    "time": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                            }
                        ],
                        "description": "Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over."
                    }
                },
                "type": "object"
            },
            "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
                "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
                "properties": {
                    "annotations": {
                        "additionalProperties": {
                            "default": "",
                            "type": "string"
                        },
                        "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                        "type": "object"
                    },
                    "creationTimestamp": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                            }
                        ],
                        "default": {},
                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                    },
                    "deletionGracePeriodSeconds": {
                        "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "deletionTimestamp": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
                            }
                        ],
                        "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                    },
                    "finalizers": {
                        "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
                        "items": {
                            "default": "",
                            "type": "string"
                        },
                        "type": "array",
                        "x-kubernetes-patch-strategy": "merge"
                    },
                    "generateName": {
                        "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                        "type": "string"
                    },
                    "generation": {
                        "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "labels": {
                        "additionalProperties": {
                            "default": "",
                            "type": "string"
                        },
                        "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                        "type": "object"
                    },
                    "managedFields": {
                        "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
                        "items": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
                                }
                            ],
                            "default": {}
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                        "type": "string"
                    },
                    "namespace": {
                        "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
                        "type": "string"
                    },
                    "ownerReferences": {
                        "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                        "items": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
                                }
                            ],
                            "default": {}
                        },
                        "type": "array",
                        "x-kubernetes-patch-merge-key": "uid",
                        "x-kubernetes-patch-strategy": "merge"
                    },
                    "resourceVersion": {
                        "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                        "type": "string"
                    },
                    "selfLink": {
                        "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
                        "type": "string"
                    },
                    "uid": {
                        "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference": {
                "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
                "properties": {
                    "apiVersion": {
                        "default": "",
                        "description": "API version of the referent.",
                        "type": "string"
                    },
                    "blockOwnerDeletion": {
                        "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                        "type": "boolean"
                    },
                    "controller": {
                        "description": "If true, this reference points to the managing controller.",
                        "type": "boolean"
                    },
                    "kind": {
                        "default": "",
                        "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                    },
                    "name": {
                        "default": "",
                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                        "type": "string"
                    },
                    "uid": {
                        "default": "",
                        "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                        "type": "string"
                    }
                },
                "required": [
                    "apiVersion",
                    "kind",
                    "name",
                    "uid"
                ],
                "type": "object",
                "x-kubernetes-map-type": "atomic"
            },
            "io.k8s.apimachinery.pkg.apis.meta.v1.Patch": {
                "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.",
                "type": "object"
            },
            "io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions": {
                "description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
                "properties": {
                    "resourceVersion": {
                        "description": "Specifies the target ResourceVersion",
                        "type": "string"
                    },
                    "uid": {
                        "description": "Specifies the target UID.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "io.k8s.apimachinery.pkg.apis.meta.v1.Status": {
                "description": "Status is a return value for calls that don't return other objects.",
                "properties": {
                    "apiVersion": {
                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                        "type": "string"
                    },
                    "code": {
                        "description": "Suggested HTTP return code for this status, 0 if not set.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "details": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails"
                            }
                        ],
                        "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type."
                    },
                    "kind": {
                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                    },
                    "message": {
                        "description": "A human-readable description of the status of this operation.",
                        "type": "string"
                    },
                    "metadata": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                            }
                        ],
                        "default": {},
                        "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                    },
                    "reason": {
                        "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause": {
                "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
                "properties": {
                    "field": {
                        "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
                        "type": "string"
                    },
                    "message": {
                        "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
                        "type": "string"
                    },
                    "reason": {
                        "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails": {
                "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
                "properties": {
                    "causes": {
                        "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
                        "items": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"
                                }
                            ],
                            "default": {}
                        },
                        "type": "array"
                    },
                    "group": {
                        "description": "The group attribute of the resource associated with the status StatusReason.",
                        "type": "string"
                    },
                    "kind": {
                        "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
                        "type": "string"
                    },
                    "retryAfterSeconds": {
                        "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
                        "format": "int32",
                        "type": "integer"
                    },
                    "uid": {
                        "description": "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "io.k8s.apimachinery.pkg.apis.meta.v1.Time": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "format": "date-time",
                "type": "string"
            },
            "clabernetes-containerlab-dev.config.v1alpha1": {
                "description": "Config is an object that holds global clabernetes config information. Note that this CR is\nexpected to effectively be a global singleton -- that is, there should be only *one* of these,\nand it *must* be named `clabernetes` -- CRD metadata spec will enforce this (via x-validation\nrules).",
                "properties": {
                    "apiVersion": {
                        "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                        "type": "string"
                    },
                    "kind": {
                        "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object"
                    },
                    "spec": {
                        "description": "ConfigSpec is the spec for a Config resource.",
                        "properties": {
                            "deployment": {
                                "description": "Deployment holds clabernetes deployment related configuration settings.",
                                "properties": {
                                    "containerlabDebug": {
                                        "description": "ContainerlabDebug sets the `--debug` flag when invoking containerlab in the launcher pods.\nThis is disabled by default.",
                                        "type": "boolean"
                                    },
                                    "containerlabTimeout": {
                                        "description": "ContainerlabTimeout sets the `--timeout` flag when invoking containerlab in the launcher\npods.",
                                        "type": "string"
                                    },
                                    "containerlabVersion": {
                                        "description": "ContainerlabVersion sets a custom version to use for containerlab -- when set this will cause\nthe launcher pods to download and use this specific version of containerlab. Setting a bad\nversion (version that doesnt exist/typo/etc.) will cause pods to fail to launch, so be\ncareful! You never \"need\" to this as the publicly available launcher image will always be\nbuilt with a (reasonably) up to date containerlab version, this setting exists in case you\nwant to pin back to an older version for some reason or you want to be bleeding edge with\nsome new feature (but do note that just because it exists in containerlab doesnt\n*necessarily* mean it will be auto-working in clabernetes!",
                                        "type": "string"
                                    },
                                    "extraEnv": {
                                        "description": "ExtraEnv is a list of additional environment variables to set on the launcher container. The\nvalues here are applied to *all* launchers since this is the global config after all!",
                                        "items": {
                                            "description": "EnvVar represents an environment variable present in a Container.",
                                            "properties": {
                                                "name": {
                                                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                                                    "type": "string"
                                                },
                                                "valueFrom": {
                                                    "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                                    "properties": {
                                                        "configMapKeyRef": {
                                                            "description": "Selects a key of a ConfigMap.",
                                                            "properties": {
                                                                "key": {
                                                                    "description": "The key to select.",
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "default": "",
                                                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                    "type": "string"
                                                                },
                                                                "optional": {
                                                                    "description": "Specify whether the ConfigMap or its key must be defined",
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "required": [
                                                                "key"
                                                            ],
                                                            "type": "object",
                                                            "x-kubernetes-map-type": "atomic"
                                                        },
                                                        "fieldRef": {
                                                            "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                                            "properties": {
                                                                "apiVersion": {
                                                                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                                    "type": "string"
                                                                },
                                                                "fieldPath": {
                                                                    "description": "Path of the field to select in the specified API version.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "fieldPath"
                                                            ],
                                                            "type": "object",
                                                            "x-kubernetes-map-type": "atomic"
                                                        },
                                                        "resourceFieldRef": {
                                                            "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                                            "properties": {
                                                                "containerName": {
                                                                    "description": "Container name: required for volumes, optional for env vars",
                                                                    "type": "string"
                                                                },
                                                                "divisor": {
                                                                    "anyOf": [
                                                                        {
                                                                            "type": "integer"
                                                                        },
                                                                        {
                                                                            "type": "string"
                                                                        }
                                                                    ],
                                                                    "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                                    "x-kubernetes-int-or-string": true
                                                                },
                                                                "resource": {
                                                                    "description": "Required: resource to select",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "resource"
                                                            ],
                                                            "type": "object",
                                                            "x-kubernetes-map-type": "atomic"
                                                        },
                                                        "secretKeyRef": {
                                                            "description": "Selects a key of a secret in the pod's namespace",
                                                            "properties": {
                                                                "key": {
                                                                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "default": "",
                                                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                    "type": "string"
                                                                },
                                                                "optional": {
                                                                    "description": "Specify whether the Secret or its key must be defined",
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "required": [
                                                                "key"
                                                            ],
                                                            "type": "object",
                                                            "x-kubernetes-map-type": "atomic"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                    },
                                    "launcherImage": {
                                        "default": "ghcr.io/srl-labs/clabernetes/clabernetes-launcher:latest",
                                        "description": "LauncherImage sets the default launcher image to use when spawning launcher deployments.",
                                        "type": "string"
                                    },
                                    "launcherImagePullPolicy": {
                                        "default": "IfNotPresent",
                                        "description": "LauncherImagePullPolicy sets the default launcher image pull policy to use when spawning\nlauncher deployments.",
                                        "enum": [
                                            "IfNotPresent",
                                            "Always",
                                            "Never"
                                        ],
                                        "type": "string"
                                    },
                                    "launcherLogLevel": {
                                        "description": "LauncherLogLevel sets the launcher clabernetes worker log level -- this overrides whatever\nis set on the controllers env vars for this topology. Note: omitempty because empty str does\nnot satisfy enum of course.",
                                        "enum": [
                                            "disabled",
                                            "critical",
                                            "warn",
                                            "info",
                                            "debug"
                                        ],
                                        "type": "string"
                                    },
                                    "privilegedLauncher": {
                                        "description": "PrivilegedLauncher, when true, sets the launcher containers to privileged. By default, we do\nour best to *not* need this/set this, and instead set only the capabilities we need, however\nits possible that some containers launched by the launcher may need/want more capabilities,\nso this flag exists for users to bypass the default settings and enable fully privileged\nlauncher pods.",
                                        "type": "boolean"
                                    },
                                    "resourcesByContainerlabKind": {
                                        "additionalProperties": {
                                            "additionalProperties": {
                                                "description": "ResourceRequirements describes the compute resource requirements.",
                                                "properties": {
                                                    "claims": {
                                                        "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                                        "items": {
                                                            "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                                            "properties": {
                                                                "name": {
                                                                    "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                                                    "type": "string"
                                                                },
                                                                "request": {
                                                                    "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "name"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array",
                                                        "x-kubernetes-list-map-keys": [
                                                            "name"
                                                        ],
                                                        "x-kubernetes-list-type": "map"
                                                    },
                                                    "limits": {
                                                        "additionalProperties": {
                                                            "anyOf": [
                                                                {
                                                                    "type": "integer"
                                                                },
                                                                {
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                            "x-kubernetes-int-or-string": true
                                                        },
                                                        "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                                        "type": "object"
                                                    },
                                                    "requests": {
                                                        "additionalProperties": {
                                                            "anyOf": [
                                                                {
                                                                    "type": "integer"
                                                                },
                                                                {
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                            "x-kubernetes-int-or-string": true
                                                        },
                                                        "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "object"
                                        },
                                        "description": "ResourcesByContainerlabKind is a mapping of container lab kind -> type -> default resource\nsettings. Note that a key value of \"default\" in the inner map will apply the given resources\nfor any pod of that containerlab *kind*. For example:\n{\n  \"srl\": {\n    \"default\": DEFAULT RESOURCES FOR KIND \"srl\",\n    \"ixr10\": RESOURCES FOR KIND \"srl\", TYPE \"ixr10\"\n}\nGiven resources as above, a containerlab node of kind \"srl\" and \"type\" ixr10\" would get the\nspecific resources as allocated in the ixr10 key, whereas a containerlab kind of \"srl\" and\n\"type\" unset or \"ixr6\" would get the \"default\" resource settings. To apply global default\nresources, regardless of containerlab kind/type, use the `resourcesDefault` field.",
                                        "type": "object"
                                    },
                                    "resourcesDefault": {
                                        "description": "ResourcesDefault is the default set of resources for clabernetes launcher pods. This is used\nonly as a last option if a Topology does not have resources, and there are no resources for\nthe given containerlab kind/type",
                                        "properties": {
                                            "claims": {
                                                "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                                "items": {
                                                    "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                                    "properties": {
                                                        "name": {
                                                            "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                                            "type": "string"
                                                        },
                                                        "request": {
                                                            "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name"
                                                    ],
                                                    "type": "object"
                                                },
                                                "type": "array",
                                                "x-kubernetes-list-map-keys": [
                                                    "name"
                                                ],
                                                "x-kubernetes-list-type": "map"
                                            },
                                            "limits": {
                                                "additionalProperties": {
                                                    "anyOf": [
                                                        {
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ],
                                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                    "x-kubernetes-int-or-string": true
                                                },
                                                "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                                "type": "object"
                                            },
                                            "requests": {
                                                "additionalProperties": {
                                                    "anyOf": [
                                                        {
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ],
                                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                    "x-kubernetes-int-or-string": true
                                                },
                                                "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "launcherImage",
                                    "launcherImagePullPolicy"
                                ],
                                "type": "object"
                            },
                            "imagePull": {
                                "description": "ImagePull holds configurations relevant to how clabernetes launcher pods handle pulling\nimages.",
                                "properties": {
                                    "criKindOverride": {
                                        "description": "CRIKindOverride allows for overriding the auto discovered cri flavor of the cluster -- this\nmay be useful if we fail to parse the cri kind for some reason, or in mixed cri flavor\nclusters -- however in the latter case, make sure that if you are using image pull through\nthat clabernetes workloads are only run on the nodes of the cri kind specified here!",
                                        "enum": [
                                            "containerd"
                                        ],
                                        "type": "string"
                                    },
                                    "criSockOverride": {
                                        "description": "CRISockOverride allows for overriding the path of the CRI sock that is mounted in the\nlauncher pods (if/when image pull through mode is auto or always). This can be useful if,\nfor example, the CRI sock is in a \"non-standard\" location like K3s which puts the containerd\nsock at `/run/k3s/containerd/containerd.sock` rather than the \"normal\" (whatever that means)\nlocation of `/run/containerd/containerd.sock`. The value must end with \"containerd.sock\" for\nnow, in the future maybe crio support will be added.",
                                        "pattern": "(.*containerd\\.sock)",
                                        "type": "string"
                                    },
                                    "dockerConfig": {
                                        "description": "DockerConfig allows for setting the docker user (for root) config for all launchers in this\ntopology. The secret *must be present in the namespace of this topology*. The secret *must*\ncontain a key \"config.json\" -- as this secret will be mounted to /root/.docker/config.json\nand as such wil be utilized when doing docker-y things -- this means you can put auth things\nin here in the event your cluster doesn't support the preferred image pull through option.",
                                        "type": "string"
                                    },
                                    "dockerDaemonConfig": {
                                        "description": "DockerDaemonConfig allows for setting a default docker daemon config for launcher pods\nwith the specified secret. The secret *must be present in the namespace of any given\ntopology* -- so if you are configuring this at the \"global config\" level, ensure that you are\ndeploying topologies into a specific namespace, or have ensured there is a secret of the\ngiven name in every namespace you wish to deploy a topology to. When set, insecure registries\nconfig option is ignored as it is assumed you are handling that in the given docker config.\nNote that the secret *must* contain a key \"daemon.json\" -- as this secret will be mounted to\n/etc/docker and docker will be expecting the config at /etc/docker/daemon.json.",
                                        "type": "string"
                                    },
                                    "pullThroughOverride": {
                                        "description": "PullThroughOverride allows for overriding the image pull through mode for this\nparticular topology.",
                                        "enum": [
                                            "auto",
                                            "always",
                                            "never"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "inClusterDNSSuffix": {
                                "description": "InClusterDNSSuffix overrides the default in cluster dns suffix used when resolving services.",
                                "type": "string"
                            },
                            "metadata": {
                                "description": "Metadata holds \"global\" metadata -- that is, metadata that is applied to all objects created\nby the clabernetes controller.",
                                "properties": {
                                    "annotations": {
                                        "additionalProperties": {
                                            "type": "string"
                                        },
                                        "description": "Annotations holds key/value pairs that should be set as annotations on clabernetes created\nresources. Note that (currently?) there is no input validation here, but this data must be\nvalid kubernetes annotation data.",
                                        "type": "object"
                                    },
                                    "labels": {
                                        "additionalProperties": {
                                            "type": "string"
                                        },
                                        "description": "Labels holds key/value pairs that should be set as labels on clabernetes created resources.\nNote that (currently?) there is no input validation here, but this data must be valid\nkubernetes label data.",
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "naming": {
                                "default": "prefixed",
                                "description": "Naming holds the global override for the \"naming\" setting for Topology objects -- this\ncontrols whether the Topology resources have the containerlab topology name as a prefix.\nOf course this is ignored if a Topology sets its Naming field to something not \"global\".",
                                "enum": [
                                    "prefixed",
                                    "non-prefixed"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "status": {
                        "description": "ConfigStatus is the status for a Config resource.",
                        "type": "object"
                    }
                },
                "type": "object",
                "x-kubernetes-gvk": {
                    "group": "clabernetes-containerlab-dev",
                    "version": "v1alpha1",
                    "kind": "config"
                }
            },
            "clabernetes-containerlab-dev.configList.v1alpha1": {
                "description": "a list of clabernetes-containerlab-dev.config.v1alpha1 resources",
                "properties": {
                    "apiVersion": {
                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                        "type": "string"
                    },
                    "items": {
                        "description": "List of configs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
                        "items": {
                            "$ref": "#/components/schemas/clabernetes-containerlab-dev.config.v1alpha1"
                        },
                        "type": "array"
                    },
                    "kind": {
                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                    },
                    "metadata": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                            }
                        ],
                        "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                    }
                },
                "type": "object",
                "required": [
                    "items"
                ],
                "x-kubernetes-gvk": {
                    "group": "clabernetes-containerlab-dev",
                    "version": "v1alpha1",
                    "kind": "configList"
                }
            },
            "clabernetes-containerlab-dev.connectivity.v1alpha1": {
                "description": "Connectivity is an object that holds information about a connectivity between launcher pods in\na clabernetes Topology.",
                "properties": {
                    "apiVersion": {
                        "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                        "type": "string"
                    },
                    "kind": {
                        "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object"
                    },
                    "spec": {
                        "description": "ConnectivitySpec is the spec for a Connectivity resource.",
                        "properties": {
                            "pointToPointTunnels": {
                                "additionalProperties": {
                                    "items": {
                                        "description": "PointToPointTunnel holds information necessary for creating a tunnel between two interfaces on\ndifferent nodes of a clabernetes Topology. This connection can be established by using clab tools\nusing VXLAN tunnels.",
                                        "properties": {
                                            "destination": {
                                                "description": "Destination is the destination service to connect to (qualified k8s service name).",
                                                "type": "string"
                                            },
                                            "localInterface": {
                                                "description": "LocalInterface is the local termination of this tunnel.",
                                                "type": "string"
                                            },
                                            "localNode": {
                                                "description": "LocalNodeName is the name (in the clabernetes topology) of the local node for this side of\nthe tunnel.",
                                                "type": "string"
                                            },
                                            "remoteInterface": {
                                                "description": "RemoteInterface is the remote termination interface of this tunnel -- necessary to store so\ncan properly align tunnels (and ids!) between nodes; basically to know which tunnels are\n\"paired up\".",
                                                "type": "string"
                                            },
                                            "remoteNode": {
                                                "description": "RemoteNode is the name (in the clabernetes topology) of the remote node for this side of the\ntunnel.",
                                                "type": "string"
                                            },
                                            "tunnelID": {
                                                "description": "TunnelID is the id number of the tunnel (vnid or segment id).",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "destination",
                                            "localInterface",
                                            "localNode",
                                            "remoteInterface",
                                            "remoteNode",
                                            "tunnelID"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "description": "PointToPointTunnels holds point-to-point connectivity information for a given topology. The\nmapping is nodeName (i.e. srl1) -> p2p tunnel data. Both sides of the tunnel should be able\nto use this information to establish connectivity between Topology nodes.",
                                "type": "object"
                            }
                        },
                        "required": [
                            "pointToPointTunnels"
                        ],
                        "type": "object"
                    },
                    "status": {
                        "description": "ConnectivityStatus is the status for a Connectivity resource.",
                        "type": "object"
                    }
                },
                "type": "object",
                "x-kubernetes-gvk": {
                    "group": "clabernetes-containerlab-dev",
                    "version": "v1alpha1",
                    "kind": "connectivity"
                }
            },
            "clabernetes-containerlab-dev.connectivityList.v1alpha1": {
                "description": "a list of clabernetes-containerlab-dev.connectivity.v1alpha1 resources",
                "properties": {
                    "apiVersion": {
                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                        "type": "string"
                    },
                    "items": {
                        "description": "List of connectivities. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
                        "items": {
                            "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivity.v1alpha1"
                        },
                        "type": "array"
                    },
                    "kind": {
                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                    },
                    "metadata": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                            }
                        ],
                        "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                    }
                },
                "type": "object",
                "required": [
                    "items"
                ],
                "x-kubernetes-gvk": {
                    "group": "clabernetes-containerlab-dev",
                    "version": "v1alpha1",
                    "kind": "connectivityList"
                }
            },
            "clabernetes-containerlab-dev.topology.v1alpha1": {
                "description": "Topology is an object that holds information about a clabernetes Topology -- that is, a valid\ntopology file (ex: containerlab topology), and any associated configurations.",
                "properties": {
                    "apiVersion": {
                        "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                        "type": "string"
                    },
                    "kind": {
                        "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object"
                    },
                    "spec": {
                        "description": "TopologySpec is the spec for a Topology resource.",
                        "properties": {
                            "connectivity": {
                                "default": "vxlan",
                                "description": "Connectivity defines the type of connectivity to use between nodes in the topology. The\ndefault behavior is to use vxlan tunnels, alternatively you can enable a more experimental\n\"slurpeeth\" connectivity flavor that stuffs traffic into tcp tunnels to avoid any vxlan mtu\nand/or fragmentation challenges.",
                                "enum": [
                                    "vxlan"
                                ],
                                "type": "string"
                            },
                            "definition": {
                                "description": "Definition defines the actual set of nodes (network ones, not k8s ones!) that this Topology\nCR represents. Historically, and probably most often, this means Topology holds a \"normal\"\ncontainerlab topology file that will be \"clabernetsified\", however this could also be a \"kne\"\nconfig, or perhaps others in the future.",
                                "properties": {
                                    "containerlab": {
                                        "description": "Containerlab holds a valid containerlab topology.",
                                        "type": "string"
                                    },
                                    "kne": {
                                        "description": "Kne holds a valid kne topology.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "deployment": {
                                "description": "Deployment holds configurations relevant to how clabernetes configures deployments that make\nup a given topology.",
                                "properties": {
                                    "containerlabDebug": {
                                        "description": "ContainerlabDebug sets the `--debug` flag when invoking containerlab in the launcher pods.\nThis is disabled by default. If this value is unset, the global config value (default of\n\"false\") will be used.",
                                        "type": "boolean"
                                    },
                                    "containerlabTimeout": {
                                        "description": "ContainerlabTimeout sets the `--timeout` flag when invoking containerlab in the launcher\npods.",
                                        "type": "string"
                                    },
                                    "containerlabVersion": {
                                        "description": "ContainerlabVersion sets a custom version to use for containerlab -- when set this will cause\nthe launcher pods to download and use this specific version of containerlab. Setting a bad\nversion (version that doesnt exist/typo/etc.) will cause pods to fail to launch, so be\ncareful! You never \"need\" to this as the publicly available launcher image will always be\nbuilt with a (reasonably) up to date containerlab version, this setting exists in case you\nwant to pin back to an older version for some reason or you want to be bleeding edge with\nsome new feature (but do note that just because it exists in containerlab doesnt\n*necessarily* mean it will be auto-working in clabernetes!",
                                        "type": "string"
                                    },
                                    "extraEnv": {
                                        "description": "ExtraEnv is a list of additional environment variables to set on the launcher container. The\nvalues here override any configured global config extra envs!",
                                        "items": {
                                            "description": "EnvVar represents an environment variable present in a Container.",
                                            "properties": {
                                                "name": {
                                                    "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                                                    "type": "string"
                                                },
                                                "valueFrom": {
                                                    "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                                    "properties": {
                                                        "configMapKeyRef": {
                                                            "description": "Selects a key of a ConfigMap.",
                                                            "properties": {
                                                                "key": {
                                                                    "description": "The key to select.",
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "default": "",
                                                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                    "type": "string"
                                                                },
                                                                "optional": {
                                                                    "description": "Specify whether the ConfigMap or its key must be defined",
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "required": [
                                                                "key"
                                                            ],
                                                            "type": "object",
                                                            "x-kubernetes-map-type": "atomic"
                                                        },
                                                        "fieldRef": {
                                                            "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                                            "properties": {
                                                                "apiVersion": {
                                                                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                                    "type": "string"
                                                                },
                                                                "fieldPath": {
                                                                    "description": "Path of the field to select in the specified API version.",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "fieldPath"
                                                            ],
                                                            "type": "object",
                                                            "x-kubernetes-map-type": "atomic"
                                                        },
                                                        "resourceFieldRef": {
                                                            "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                                            "properties": {
                                                                "containerName": {
                                                                    "description": "Container name: required for volumes, optional for env vars",
                                                                    "type": "string"
                                                                },
                                                                "divisor": {
                                                                    "anyOf": [
                                                                        {
                                                                            "type": "integer"
                                                                        },
                                                                        {
                                                                            "type": "string"
                                                                        }
                                                                    ],
                                                                    "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                                    "x-kubernetes-int-or-string": true
                                                                },
                                                                "resource": {
                                                                    "description": "Required: resource to select",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "resource"
                                                            ],
                                                            "type": "object",
                                                            "x-kubernetes-map-type": "atomic"
                                                        },
                                                        "secretKeyRef": {
                                                            "description": "Selects a key of a secret in the pod's namespace",
                                                            "properties": {
                                                                "key": {
                                                                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "default": "",
                                                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                    "type": "string"
                                                                },
                                                                "optional": {
                                                                    "description": "Specify whether the Secret or its key must be defined",
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "required": [
                                                                "key"
                                                            ],
                                                            "type": "object",
                                                            "x-kubernetes-map-type": "atomic"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "name"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                    },
                                    "filesFromConfigMap": {
                                        "additionalProperties": {
                                            "items": {
                                                "description": "FileFromConfigMap represents a file that you would like to mount (from a configmap) in the\nlauncher pod for a given node.",
                                                "properties": {
                                                    "configMapName": {
                                                        "description": "ConfigMapName is the name of the configmap to mount.",
                                                        "type": "string"
                                                    },
                                                    "configMapPath": {
                                                        "description": "ConfigMapPath is the path/key in the configmap to mount, if not specified the configmap will\nbe mounted without a sub-path.",
                                                        "type": "string"
                                                    },
                                                    "filePath": {
                                                        "description": "FilePath is the path to mount the file.",
                                                        "type": "string"
                                                    },
                                                    "mode": {
                                                        "default": "read",
                                                        "description": "Mode sets the file permissions when mounting the configmap. Since the configmap will be read\nonly filesystem anyway, we basically just want to expose if the file should be mounted as\nexecutable or not. So, default permissions would be 0o444 (read) and execute would be 0o555.",
                                                        "enum": [
                                                            "read",
                                                            "execute"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "configMapName",
                                                    "filePath"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "description": "FilesFromConfigMap is a slice of FileFromConfigMap that define the configmap/path and node\nand path on a launcher node that the file should be mounted to. If the path is not provided\nthe configmap is mounted in its entirety (like normal k8s things), so you *probably* want\nto specify the sub path unless you are sure what you're doing!",
                                        "type": "object"
                                    },
                                    "filesFromURL": {
                                        "additionalProperties": {
                                            "items": {
                                                "description": "FileFromURL represents a file that you would like to mount from a URL in the launcher pod for\na given node.",
                                                "properties": {
                                                    "filePath": {
                                                        "description": "FilePath is the path to mount the file.",
                                                        "type": "string"
                                                    },
                                                    "url": {
                                                        "description": "URL is the url to fetch and mount at the provided FilePath. This URL must be a url that can\nbe simply downloaded and dumped to disk -- meaning a normal file server type endpoint or if\nusing GitHub or similar a \"raw\" path.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "filePath",
                                                    "url"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "description": "FilesFromURL is a mapping of FileFromURL that define a URL at which to fetch a file, and path\non a launcher node that the file should be downloaded to. This is useful for configs that are\nlarger than the ConfigMap (etcd) 1Mb size limit.",
                                        "type": "object"
                                    },
                                    "launcherImage": {
                                        "description": "LauncherImage sets the default launcher image to use when spawning launcher deployments for\nthis Topology. This is optional, the launcher image will default to whatever is set in the\nglobal config CR.",
                                        "type": "string"
                                    },
                                    "launcherImagePullPolicy": {
                                        "description": "LauncherImagePullPolicy sets the default launcher image pull policy to use when spawning\nlauncher deployments for this Topology. This is also optional and defaults to whatever is set\nin the global config CR (typically \"IfNotPresent\"). Note: omitempty because empty str does\nnot satisfy enum of course.",
                                        "enum": [
                                            "IfNotPresent",
                                            "Always",
                                            "Never"
                                        ],
                                        "type": "string"
                                    },
                                    "launcherLogLevel": {
                                        "description": "LauncherLogLevel sets the launcher clabernetes worker log level -- this overrides whatever\nis set on the controllers env vars for this topology. Note: omitempty because empty str does\nnot satisfy enum of course.",
                                        "enum": [
                                            "disabled",
                                            "critical",
                                            "warn",
                                            "info",
                                            "debug"
                                        ],
                                        "type": "string"
                                    },
                                    "persistence": {
                                        "description": "Persistence holds configurations relating to persisting each nodes working containerlab\ndirectory.",
                                        "properties": {
                                            "claimSize": {
                                                "description": "ClaimSize is the size of the PVC for this topology -- if not provided this defaults to 5Gi.\nIf provided, the string value must be a valid kubernetes storage requests style string. Note\nthe claim size *cannot be made smaller* once created, but it *can* be expanded. If you need\nto make the claim smaller you must delete the topology (or the node from the topology) and\nre-add it.",
                                                "type": "string"
                                            },
                                            "enabled": {
                                                "description": "Enabled indicates if persistence of hte containerlab lab/working directory will be placed in\na mounted PVC.",
                                                "type": "boolean"
                                            },
                                            "storageClassName": {
                                                "description": "StorageClassName is the storage class to set in the PVC -- if not provided this will be left\nempty which will end up using your default storage class. Note that currently we assume you\nhave (as default) or provide a dynamically provisionable storage class, hence no selector.",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "enabled"
                                        ],
                                        "type": "object"
                                    },
                                    "privilegedLauncher": {
                                        "description": "PrivilegedLauncher, when true, sets the launcher containers to privileged. Historically we\ntried very hard to *not* need to set privileged mode on pods, however the reality is it is\nmuch, much easier to get various network operating system images booting with this enabled,\nso, the default mode is to set the privileged flag on pods. Disabling this option causes\nclabernetes to try to run the pods for this topology in the \"not so privileged\" mode -- this\nbasically means we mount all capabilities we think should be available, set apparmor to\n\"unconfined\", and mount paths like /dev/kvm and dev/net/tun. With this \"not so privileged\"\nmode, Nokia SRL devices and Arista cEOS devices have been able to boot on some clusters, but\nyour mileage may vary. In short: if you don't care about having some privileged pods, just\nleave this alone.",
                                        "type": "boolean"
                                    },
                                    "resources": {
                                        "additionalProperties": {
                                            "description": "ResourceRequirements describes the compute resource requirements.",
                                            "properties": {
                                                "claims": {
                                                    "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                                    "items": {
                                                        "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                                                "type": "string"
                                                            },
                                                            "request": {
                                                                "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "name"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array",
                                                    "x-kubernetes-list-map-keys": [
                                                        "name"
                                                    ],
                                                    "x-kubernetes-list-type": "map"
                                                },
                                                "limits": {
                                                    "additionalProperties": {
                                                        "anyOf": [
                                                            {
                                                                "type": "integer"
                                                            },
                                                            {
                                                                "type": "string"
                                                            }
                                                        ],
                                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                        "x-kubernetes-int-or-string": true
                                                    },
                                                    "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                                    "type": "object"
                                                },
                                                "requests": {
                                                    "additionalProperties": {
                                                        "anyOf": [
                                                            {
                                                                "type": "integer"
                                                            },
                                                            {
                                                                "type": "string"
                                                            }
                                                        ],
                                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                        "x-kubernetes-int-or-string": true
                                                    },
                                                    "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "description": "Resources is a mapping of nodeName (or \"default\") to kubernetes resource requirements -- any\nvalue set here overrides the \"global\" config resource definitions. If a key \"default\" is set,\nthose resource values will be preferred over *all global settings* for this topology --\nmeaning, the \"global\" resource settings will never be looked up for this topology, and any\nkind/type that is *not* in this resources map will have the \"default\" resources from this\nmapping applied.",
                                        "type": "object"
                                    },
                                    "scheduling": {
                                        "description": "Scheduling holds information about how the launcher pod(s) should be configured with respect\nto \"scheduling\" things (affinity/node selector/tolerations).",
                                        "properties": {
                                            "nodeSelector": {
                                                "additionalProperties": {
                                                    "type": "string"
                                                },
                                                "description": "NodeSelector sets the node selector that will be configured on all launcher pods for this\nTopology.",
                                                "type": "object"
                                            },
                                            "tolerations": {
                                                "description": "Tolerations is a list of Tolerations that will be set on the launcher pod spec.",
                                                "items": {
                                                    "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                                                    "properties": {
                                                        "effect": {
                                                            "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                                            "type": "string"
                                                        },
                                                        "key": {
                                                            "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                                            "type": "string"
                                                        },
                                                        "operator": {
                                                            "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                                                            "type": "string"
                                                        },
                                                        "tolerationSeconds": {
                                                            "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                                                            "format": "int64",
                                                            "type": "integer"
                                                        },
                                                        "value": {
                                                            "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array",
                                                "x-kubernetes-list-type": "atomic"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "expose": {
                                "description": "Expose holds configurations relevant to how clabernetes exposes a topology.",
                                "properties": {
                                    "disableAutoExpose": {
                                        "description": "DisableAutoExpose disables the automagic exposing of ports for a given topology. When this\nsetting is disabled clabernetes will not auto add ports so if you want to expose (via a\nload balancer service) you will need to have ports outlined in your containerlab config\n(or equivalent for kne). When this is `false` (default), clabernetes will add and expose the\nfollowing list of ports to whatever ports you have already defined:\n\n21    - tcp - ftp\n22    - tcp - ssh\n23    - tcp - telnet\n80    - tcp - http\n161   - udp - snmp\n443   - tcp - https\n830   - tcp - netconf (over ssh)\n5000  - tcp - telnet for vrnetlab qemu host\n5900  - tcp - vnc\n6030  - tcp - gnmi (arista default)\n9339  - tcp - gnmi/gnoi\n9340  - tcp - gribi\n9559  - tcp - p4rt\n57400 - tcp - gnmi (nokia srl/sros default)\n\nThis setting is *ignored completely* if `DisableExpose` is true!",
                                        "type": "boolean"
                                    },
                                    "disableExpose": {
                                        "description": "DisableExpose indicates if exposing nodes via LoadBalancer service should be disabled, by\ndefault any mapped ports in a containerlab topology will be exposed.",
                                        "type": "boolean"
                                    },
                                    "exposeType": {
                                        "default": "LoadBalancer",
                                        "description": "ExposeType configures the service type(s) related to exposing the topology. This is an enum\nthat has the following valid values:\n- None: expose is *not* disabled, but we just don't create any services related to the pods,\n        you may want to do this if you want to tickle the pods by pod name directly for some\n        reason while not having extra services floating around.\n- ClusterIP: a clusterip service is created so you can hit that service name for the pods.\n- LoadBalancer: (default) creates a load balancer service so you can access your pods from\n        outside the cluster. this is/was the only behavior up to v0.2.4.",
                                        "enum": [
                                            "None",
                                            "ClusterIP",
                                            "LoadBalancer"
                                        ],
                                        "type": "string"
                                    },
                                    "useNodeMgmtIpv4Address": {
                                        "description": "UseNodeMgmtIpv4Address, when set to true, the controller will look up each node\u2019s management\nIPv4 address (from the `mgmt-ipv4` field in your containerlab topology) and assign\nthat address to `Service.spec.loadBalancerIP` on the corresponding LoadBalancer\nService.\n- Only applies if `spec.expose.exposeType` is `LoadBalancer`.\n- If the IP is missing or fails validation, a warning is emitted and Kubernetes\n  will allocate an IP automatically.",
                                        "type": "boolean"
                                    },
                                    "useNodeMgmtIpv6Address": {
                                        "description": "UseNodeMgmtIpv6Address, when set to true, the controller will look up each node\u2019s management\nIPv6 address (from the `mgmt-ipv6` field in your containerlab topology) and assign\nthat address to `Service.spec.loadBalancerIP` on the corresponding LoadBalancer\nService.\n- Only applies if `spec.expose.exposeType` is `LoadBalancer`.\n- If the IP is missing or fails validation, a warning is emitted and Kubernetes\nwill allocate an IP automatically.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "imagePull": {
                                "description": "ImagePull holds configurations relevant to how clabernetes launcher pods handle pulling\nimages.",
                                "properties": {
                                    "dockerConfig": {
                                        "description": "DockerConfig allows for setting the docker user (for root) config for all launchers in this\ntopology. The secret *must be present in the namespace of this topology*. The secret *must*\ncontain a key \"config.json\" -- as this secret will be mounted to /root/.docker/config.json\nand as such wil be utilized when doing docker-y things -- this means you can put auth things\nin here in the event your cluster doesn't support the preferred image pull through option.",
                                        "type": "string"
                                    },
                                    "dockerDaemonConfig": {
                                        "description": "DockerDaemonConfig allows for setting the docker daemon config for all launchers in this\ntopology. The secret *must be present in the namespace of this topology*. The secret *must*\ncontain a key \"daemon.json\" -- as this secret will be mounted to /etc/docker and docker will\nbe expecting the config at /etc/docker/daemon.json.",
                                        "type": "string"
                                    },
                                    "insecureRegistries": {
                                        "description": "InsecureRegistries is a slice of strings of insecure registries to configure in the launcher\npods.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "pullSecrets": {
                                        "description": "PullSecrets allows for providing secret(s) to use when pulling the image. This is only\napplicable *if* ImagePullThrough mode is auto or always. The secret is used by the launcher\npod to pull the image via the cluster CRI. The secret is *not* mounted to the pod, but\ninstead is used in conjunction with a job that spawns a pod using the specified secret. The\njob will kill the pod as soon as the image has been pulled -- we do this because we don't\ncare if the pod runs, we only care that the image gets pulled on a specific node. Note that\njust like \"normal\" pull secrets, the secret needs to be in the namespace that the topology\nis in.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "set"
                                    },
                                    "pullThroughOverride": {
                                        "description": "PullThroughOverride allows for overriding the image pull through mode for this\nparticular topology.",
                                        "enum": [
                                            "auto",
                                            "always",
                                            "never"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "naming": {
                                "default": "global",
                                "description": "Naming tells the clabernetes controller how it should name resources it creates -- that is\nwhether it should include the containerlab topology name as a prefix on resources spawned\nfrom this Topology or not; this includes the actual (containerlab) node Deployment(s), as\nwell as the Service(s) for the Topology. This setting has three modes; \"prefixed\" -- which of\ncourse includes the containerlab topology name as a prefix, \"non-prefixed\" which does *not*\ninclude the containerlab topology name as a prefix, and \"global\" which defers to the global\nconfig setting for this (which defaults to \"prefixed\").\n\"non-prefixed\" mode should only be enabled when/if Topologies are deployed in their own\nnamespace -- the reason for this is simple: if two Topologies exist in the same namespace\nwith a (containerlab) node named \"my-router\" there will be a conflicting Deployment and\nServices for the \"my-router\" (containerlab) node. Note that this field is immutable! If you\nwant to change its value you need to delete the Topology and re-create it.",
                                "enum": [
                                    "prefixed",
                                    "non-prefixed",
                                    "global"
                                ],
                                "type": "string",
                                "x-kubernetes-validations": [
                                    {
                                        "message": "naming field is immutable, to change this value delete and re-create the Topology",
                                        "rule": "self == oldSelf"
                                    }
                                ]
                            },
                            "statusProbes": {
                                "description": "StatusProbes holds the configurations relevant to how clabernetes and the launcher handle\nchecking and reporting the containerlab node status",
                                "properties": {
                                    "enabled": {
                                        "default": true,
                                        "description": "Enabled sets the status probes to enabled (or obviously disabled). Note that if the probes\nare enabled and the health condition fails due to configuring the node the cluster will\nrestart the node. So, if you plan on being destructive with the node config (probably because\nyou will have exec'd onto the node) then you may want to disable this!",
                                        "type": "boolean"
                                    },
                                    "excludedNodes": {
                                        "description": "ExcludedNodes is a set of nodes to be excluded from status probe checking. It may be\ndesirable to exclude some node(s) from status checking due to them not having an easy way\nfor clabernetes to check the state of the node. The node names here should match the name of\nthe nodes in the containerlab sub-topology.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array",
                                        "x-kubernetes-list-type": "atomic"
                                    },
                                    "nodeProbeConfigurations": {
                                        "additionalProperties": {
                                            "description": "ProbeConfiguration holds information about how to probe a (containerlab) node in a Topology. If\nboth style probes are configured, both will be used and both must succeed in order to report\nhealthy.",
                                            "properties": {
                                                "sshProbeConfiguration": {
                                                    "description": "SSHProbeConfiguration defines an SSH probe.",
                                                    "properties": {
                                                        "password": {
                                                            "description": "Password is the password to use for auth.",
                                                            "type": "string"
                                                        },
                                                        "port": {
                                                            "description": "Port is an optional override (of course default is 22).",
                                                            "type": "integer"
                                                        },
                                                        "username": {
                                                            "description": "Username is the username to use for auth.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "password",
                                                        "username"
                                                    ],
                                                    "type": "object"
                                                },
                                                "startupSeconds": {
                                                    "description": "StartupSeconds is the total amount of seconds to allow for the node to start. This defaults\nto ~13 minutes to hopefully account for slow to boot nodes. Note that there is also a 60\ninitial delay configured, so technically the default is ~14-15 minutes. Be careful with this\ndelay as there must be time for c9s to (via whatever means) pull the image and load it into\ndocker on the launcher and this can take a bit! Having this be bigger than you think you need\nis generally better since if the startup probe succeeds ever then the readiness probe takes\nover anyway.",
                                                    "type": "integer"
                                                },
                                                "tcpProbeConfiguration": {
                                                    "description": "TCPProbeConfiguration defines a TCP probe.",
                                                    "properties": {
                                                        "port": {
                                                            "description": "Port defines the port to try to open a TCP connection to. When using TCP probe setup this\nconnection happens inside the launcher rather than the \"normal\" k8s style probes. This style\nprobe behaves like a k8s style probe though in that it is \"successful\" whenever a TCP\nconnection to this port can be opened successfully.",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "port"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "description": "NodeProbeConfigurations is a map of node specific probe configurations -- if you only need\na simple ssh or tcp connect style setup that works on all node types in the topology you can\nignore this and just configure ProbeConfiguration.",
                                        "type": "object"
                                    },
                                    "probeConfiguration": {
                                        "description": "ProbeConfiguration is the default probe configuration for the Topology.",
                                        "properties": {
                                            "sshProbeConfiguration": {
                                                "description": "SSHProbeConfiguration defines an SSH probe.",
                                                "properties": {
                                                    "password": {
                                                        "description": "Password is the password to use for auth.",
                                                        "type": "string"
                                                    },
                                                    "port": {
                                                        "description": "Port is an optional override (of course default is 22).",
                                                        "type": "integer"
                                                    },
                                                    "username": {
                                                        "description": "Username is the username to use for auth.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "password",
                                                    "username"
                                                ],
                                                "type": "object"
                                            },
                                            "startupSeconds": {
                                                "description": "StartupSeconds is the total amount of seconds to allow for the node to start. This defaults\nto ~13 minutes to hopefully account for slow to boot nodes. Note that there is also a 60\ninitial delay configured, so technically the default is ~14-15 minutes. Be careful with this\ndelay as there must be time for c9s to (via whatever means) pull the image and load it into\ndocker on the launcher and this can take a bit! Having this be bigger than you think you need\nis generally better since if the startup probe succeeds ever then the readiness probe takes\nover anyway.",
                                                "type": "integer"
                                            },
                                            "tcpProbeConfiguration": {
                                                "description": "TCPProbeConfiguration defines a TCP probe.",
                                                "properties": {
                                                    "port": {
                                                        "description": "Port defines the port to try to open a TCP connection to. When using TCP probe setup this\nconnection happens inside the launcher rather than the \"normal\" k8s style probes. This style\nprobe behaves like a k8s style probe though in that it is \"successful\" whenever a TCP\nconnection to this port can be opened successfully.",
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "port"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "required": [
                            "definition",
                            "naming"
                        ],
                        "type": "object",
                        "x-kubernetes-validations": [
                            {
                                "message": "naming is required once set",
                                "rule": "!has(oldSelf.naming) || has(self.naming)"
                            }
                        ]
                    },
                    "status": {
                        "description": "TopologyStatus is the status for a Topology resource.",
                        "properties": {
                            "conditions": {
                                "description": "Conditions is a list of conditions for the topology custom resource.",
                                "items": {
                                    "description": "Condition contains details for one aspect of the current state of this API Resource.",
                                    "properties": {
                                        "lastTransitionTime": {
                                            "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "message": {
                                            "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                                            "maxLength": 32768,
                                            "type": "string"
                                        },
                                        "observedGeneration": {
                                            "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                                            "format": "int64",
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "reason": {
                                            "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                                            "maxLength": 1024,
                                            "minLength": 1,
                                            "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "status of the condition, one of True, False, Unknown.",
                                            "enum": [
                                                "True",
                                                "False",
                                                "Unknown"
                                            ],
                                            "type": "string"
                                        },
                                        "type": {
                                            "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                                            "maxLength": 316,
                                            "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "lastTransitionTime",
                                        "message",
                                        "reason",
                                        "status",
                                        "type"
                                    ],
                                    "type": "object"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                            },
                            "configs": {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "description": "Configs is a map of node name -> containerlab config -- in other words, this is the original\nTopology.Spec.Definition converted to containerlab \"sub-topologies\" The actual\n\"sub-topologies\"/\"sub-configs\" are stored as a string -- this is the actual containerlab\ntopology that gets mounted in the launcher pod.",
                                "type": "object"
                            },
                            "exposedPorts": {
                                "additionalProperties": {
                                    "description": "ExposedPorts holds information about exposed ports.",
                                    "properties": {
                                        "loadBalancerAddress": {
                                            "description": "LoadBalancerAddress holds the address assigned to the load balancer exposing ports for a\ngiven node.",
                                            "type": "string"
                                        },
                                        "tcpPorts": {
                                            "description": "TCPPorts is a list of TCP ports exposed on the LoadBalancer service.",
                                            "items": {
                                                "type": "integer"
                                            },
                                            "type": "array",
                                            "x-kubernetes-list-type": "set"
                                        },
                                        "udpPorts": {
                                            "description": "UDPPorts is a list of UDP ports exposed on the LoadBalancer service.",
                                            "items": {
                                                "type": "integer"
                                            },
                                            "type": "array",
                                            "x-kubernetes-list-type": "set"
                                        }
                                    },
                                    "required": [
                                        "loadBalancerAddress",
                                        "tcpPorts",
                                        "udpPorts"
                                    ],
                                    "type": "object"
                                },
                                "description": "ExposedPorts holds a map of (containerlab not k8s!) nodes and their exposed ports\n(via load balancer).",
                                "type": "object"
                            },
                            "kind": {
                                "description": "Kind is the topology kind this CR represents -- for example \"containerlab\".",
                                "enum": [
                                    "containerlab",
                                    "kne"
                                ],
                                "type": "string"
                            },
                            "nodeReadiness": {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "description": "NodeReadiness is a map of nodename to readiness status. The readiness status is as reported\nby the k8s startup/readiness probe (which is in turn managed by the status probe\nconfiguration of the topology). The possible values are \"notready\" and \"ready\", \"unknown\".",
                                "type": "object"
                            },
                            "reconcileHashes": {
                                "description": "ReconcileHashes holds the hashes form the last reconciliation run.",
                                "properties": {
                                    "config": {
                                        "description": "Config is the last stored hash of the rendered config(s) -- that is, the map of \"sub\ntopologies\" representing the overall Topology.Spec.Definition.",
                                        "type": "string"
                                    },
                                    "exposedPorts": {
                                        "description": "ExposedPorts is the last stored hash of the exposed ports mapping for this Topology. Note\nthat while we obviously care about the exposed ports on a *per node basis*, we don't need to\ntrack that here -- this is here strictly to track differences in the load balancer service --\nthe actual sub-topologies (or sub-configs) effectively track the expose port status per node.",
                                        "type": "string"
                                    },
                                    "filesFromURL": {
                                        "additionalProperties": {
                                            "type": "string"
                                        },
                                        "description": "FilesFromURL is the hash of the last stored mapping of files from URL (to node mapping). Note\nthat this is tracked on a *per node basis* because the URL of a file could be updated without\nany change to the actual config/topology (or sub-config/sub-topology); as such we need to\nexplicitly track this per node to know when a node needs to be restarted such that the new\nURL is \"picked up\" by the node/launcher.",
                                        "type": "object"
                                    },
                                    "imagePullSecrets": {
                                        "description": "ImagePullSecrets is the hash of hte last stored image pull secrets for this Topology.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "config",
                                    "exposedPorts",
                                    "filesFromURL",
                                    "imagePullSecrets"
                                ],
                                "type": "object"
                            },
                            "removeTopologyPrefix": {
                                "description": "RemoveTopologyPrefix holds the \"resolved\" value of the RemoveTopologyPrefix field -- that is\nif it is unset (nil) when a Topology is created, the controller will use the default global\nconfig value (false); if the field is non-nil, this status field will hold the non-nil value.",
                                "type": "boolean"
                            },
                            "topologyReady": {
                                "description": "TopologyReady indicates if all nodes in the topology have reported ready. This is duplicated\nfrom the conditions so we can easily snag it for print columns!",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "conditions",
                            "configs",
                            "exposedPorts",
                            "kind",
                            "nodeReadiness",
                            "reconcileHashes",
                            "removeTopologyPrefix",
                            "topologyReady"
                        ],
                        "type": "object"
                    }
                },
                "type": "object",
                "x-kubernetes-gvk": {
                    "group": "clabernetes-containerlab-dev",
                    "version": "v1alpha1",
                    "kind": "topology"
                }
            },
            "clabernetes-containerlab-dev.topologyList.v1alpha1": {
                "description": "a list of clabernetes-containerlab-dev.topology.v1alpha1 resources",
                "properties": {
                    "apiVersion": {
                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                        "type": "string"
                    },
                    "items": {
                        "description": "List of topologies. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
                        "items": {
                            "$ref": "#/components/schemas/clabernetes-containerlab-dev.topology.v1alpha1"
                        },
                        "type": "array"
                    },
                    "kind": {
                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                    },
                    "metadata": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                            }
                        ],
                        "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                    }
                },
                "type": "object",
                "required": [
                    "items"
                ],
                "x-kubernetes-gvk": {
                    "group": "clabernetes-containerlab-dev",
                    "version": "v1alpha1",
                    "kind": "topologyList"
                }
            },
            "clabernetes-containerlab-dev.imagerequest.v1alpha1": {
                "description": "ImageRequest is an object that represents a request (from a launcher pod) to pull an image on a\ngiven kubernetes node such that the image can be \"pulled through\" into the launcher docker\ndaemon.",
                "properties": {
                    "apiVersion": {
                        "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                        "type": "string"
                    },
                    "kind": {
                        "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object"
                    },
                    "spec": {
                        "description": "ImageRequestSpec is the spec for a Config resource.",
                        "properties": {
                            "kubernetesNode": {
                                "description": "KubernetesNode is the node where the launcher pod is running and where the image should be\npulled too.",
                                "type": "string"
                            },
                            "requestedImage": {
                                "description": "RequestedImage is the image that the launcher pod wants the controller to get pulled onto\nthe specified node.",
                                "type": "string"
                            },
                            "requestedImagePullSecrets": {
                                "description": "RequestedImagePullSecrets is a list of configured pull secrets to set in the pull pod spec.",
                                "items": {
                                    "type": "string"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "set"
                            },
                            "topologyName": {
                                "description": "TopologyName is the name of the topology requesting the image.",
                                "type": "string"
                            },
                            "topologyNodeName": {
                                "description": "TopologyNodeName is the name of the node in the topology (i.e. the router name in a\ncontainerlab topology) that the image is being requested for.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "kubernetesNode",
                            "requestedImage",
                            "topologyName",
                            "topologyNodeName"
                        ],
                        "type": "object"
                    },
                    "status": {
                        "description": "ImageRequestStatus is the status for a ImageRequest resource.",
                        "properties": {
                            "accepted": {
                                "description": "Accepted indicates that the ImageRequest controller has seen this image request and is going\nto process it. This can be useful to let the requesting pod know that \"yep, this is in the\nworks, and i can go watch the cri images on this node now\".",
                                "type": "boolean"
                            },
                            "complete": {
                                "description": "Complete indicates that the ImageRequest controller has seen that the puller pod has done its\njob and that the image has been pulled onto the requested node.",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "accepted",
                            "complete"
                        ],
                        "type": "object"
                    }
                },
                "type": "object",
                "x-kubernetes-gvk": {
                    "group": "clabernetes-containerlab-dev",
                    "version": "v1alpha1",
                    "kind": "imagerequest"
                }
            },
            "clabernetes-containerlab-dev.imagerequestList.v1alpha1": {
                "description": "a list of clabernetes-containerlab-dev.imagerequest.v1alpha1 resources",
                "properties": {
                    "apiVersion": {
                        "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                        "type": "string"
                    },
                    "items": {
                        "description": "List of imagerequests. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
                        "items": {
                            "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequest.v1alpha1"
                        },
                        "type": "array"
                    },
                    "kind": {
                        "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                    },
                    "metadata": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
                            }
                        ],
                        "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                    }
                },
                "type": "object",
                "required": [
                    "items"
                ],
                "x-kubernetes-gvk": {
                    "group": "clabernetes-containerlab-dev",
                    "version": "v1alpha1",
                    "kind": "imagerequestList"
                }
            }
        }
    },
    "paths": {
        "/apis/clabernetes.containerlab.dev/v1alpha1/configs": {
            "get": {
                "description": "list objects of kind Config",
                "operationId": "listClabernetesContainerlabDevV1Alpha1ConfigForAllNamespaces",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.configList.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.configList.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "parameters": [
                {
                    "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                    "in": "query",
                    "name": "allowWatchBookmarks",
                    "schema": {
                        "type": "boolean",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "in": "query",
                    "name": "continue",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "in": "query",
                    "name": "fieldSelector",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "in": "query",
                    "name": "labelSelector",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "in": "query",
                    "name": "limit",
                    "schema": {
                        "type": "integer",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "in": "query",
                    "name": "resourceVersion",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "in": "query",
                    "name": "resourceVersionMatch",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                    "in": "query",
                    "name": "timeoutSeconds",
                    "schema": {
                        "type": "integer",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "in": "query",
                    "name": "watch",
                    "schema": {
                        "type": "boolean",
                        "uniqueItems": true
                    }
                }
            ]
        },
        "/apis/clabernetes.containerlab.dev/v1alpha1/namespaces/{namespace}/configs": {
            "delete": {
                "description": "delete collection of Config",
                "operationId": "deleteClabernetesContainerlabDevV1Alpha1CollectionNamespacedConfig",
                "parameters": [
                    {
                        "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                        "in": "query",
                        "name": "allowWatchBookmarks",
                        "schema": {
                            "type": "boolean",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                        "in": "query",
                        "name": "continue",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                        "in": "query",
                        "name": "fieldSelector",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "in": "query",
                        "name": "labelSelector",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "in": "query",
                        "name": "resourceVersion",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "in": "query",
                        "name": "resourceVersionMatch",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                        "in": "query",
                        "name": "timeoutSeconds",
                        "schema": {
                            "type": "integer",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                        "in": "query",
                        "name": "watch",
                        "schema": {
                            "type": "boolean",
                            "uniqueItems": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "get": {
                "description": "list objects of kind Config",
                "operationId": "listClabernetesContainerlabDevV1Alpha1NamespacedConfig",
                "parameters": [
                    {
                        "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                        "in": "query",
                        "name": "allowWatchBookmarks",
                        "schema": {
                            "type": "boolean",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                        "in": "query",
                        "name": "continue",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                        "in": "query",
                        "name": "fieldSelector",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "in": "query",
                        "name": "labelSelector",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "in": "query",
                        "name": "resourceVersion",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "in": "query",
                        "name": "resourceVersionMatch",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                        "in": "query",
                        "name": "timeoutSeconds",
                        "schema": {
                            "type": "integer",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                        "in": "query",
                        "name": "watch",
                        "schema": {
                            "type": "boolean",
                            "uniqueItems": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.configList.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.configList.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "post": {
                "description": "create a Config",
                "operationId": "createClabernetesContainerlabDevV1Alpha1NamespacedConfig",
                "parameters": [
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
                        "in": "query",
                        "name": "fieldManager",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
                        "in": "query",
                        "name": "fieldValidation",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/clabernetes-containerlab-dev.config.v1alpha1"
                            }
                        },
                        "application/yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/clabernetes-containerlab-dev.config.v1alpha1"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.config.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.config.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.config.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.config.v1alpha1"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.config.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.config.v1alpha1"
                                }
                            }
                        },
                        "description": "Accepted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "parameters": [
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                }
            ]
        },
        "/apis/clabernetes.containerlab.dev/v1alpha1/namespaces/{namespace}/configs/{name}": {
            "delete": {
                "description": "delete a Config",
                "operationId": "deleteClabernetesContainerlabDevV1Alpha1NamespacedConfig",
                "parameters": [
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
                        "in": "query",
                        "name": "gracePeriodSeconds",
                        "schema": {
                            "type": "integer",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
                        "in": "query",
                        "name": "orphanDependents",
                        "schema": {
                            "type": "boolean",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                        "in": "query",
                        "name": "propagationPolicy",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
                            }
                        },
                        "application/yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            }
                        },
                        "description": "Accepted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "get": {
                "description": "read the specified Config",
                "operationId": "readClabernetesContainerlabDevV1Alpha1NamespacedConfig",
                "parameters": [
                    {
                        "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "in": "query",
                        "name": "resourceVersion",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.config.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.config.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "patch": {
                "description": "partially update the specified Config",
                "operationId": "patchClabernetesContainerlabDevV1Alpha1NamespacedConfig",
                "parameters": [
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
                        "in": "query",
                        "name": "fieldManager",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
                        "in": "query",
                        "name": "fieldValidation",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/apply-patch+yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
                            }
                        },
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
                            }
                        },
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.config.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.config.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "put": {
                "description": "replace the specified Config",
                "operationId": "replaceClabernetesContainerlabDevV1Alpha1NamespacedConfig",
                "parameters": [
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
                        "in": "query",
                        "name": "fieldManager",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
                        "in": "query",
                        "name": "fieldValidation",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/clabernetes-containerlab-dev.config.v1alpha1"
                            }
                        },
                        "application/yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/clabernetes-containerlab-dev.config.v1alpha1"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.config.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.config.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.config.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.config.v1alpha1"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "parameters": [
                {
                    "description": "name of the Config",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                }
            ]
        },
        "/apis/clabernetes.containerlab.dev/v1alpha1/connectivities": {
            "get": {
                "description": "list objects of kind Connectivity",
                "operationId": "listClabernetesContainerlabDevV1Alpha1ConnectivityForAllNamespaces",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivityList.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivityList.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "parameters": [
                {
                    "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                    "in": "query",
                    "name": "allowWatchBookmarks",
                    "schema": {
                        "type": "boolean",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "in": "query",
                    "name": "continue",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "in": "query",
                    "name": "fieldSelector",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "in": "query",
                    "name": "labelSelector",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "in": "query",
                    "name": "limit",
                    "schema": {
                        "type": "integer",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "in": "query",
                    "name": "resourceVersion",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "in": "query",
                    "name": "resourceVersionMatch",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                    "in": "query",
                    "name": "timeoutSeconds",
                    "schema": {
                        "type": "integer",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "in": "query",
                    "name": "watch",
                    "schema": {
                        "type": "boolean",
                        "uniqueItems": true
                    }
                }
            ]
        },
        "/apis/clabernetes.containerlab.dev/v1alpha1/namespaces/{namespace}/connectivities": {
            "delete": {
                "description": "delete collection of Connectivity",
                "operationId": "deleteClabernetesContainerlabDevV1Alpha1CollectionNamespacedConnectivity",
                "parameters": [
                    {
                        "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                        "in": "query",
                        "name": "allowWatchBookmarks",
                        "schema": {
                            "type": "boolean",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                        "in": "query",
                        "name": "continue",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                        "in": "query",
                        "name": "fieldSelector",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "in": "query",
                        "name": "labelSelector",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "in": "query",
                        "name": "resourceVersion",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "in": "query",
                        "name": "resourceVersionMatch",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                        "in": "query",
                        "name": "timeoutSeconds",
                        "schema": {
                            "type": "integer",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                        "in": "query",
                        "name": "watch",
                        "schema": {
                            "type": "boolean",
                            "uniqueItems": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "get": {
                "description": "list objects of kind Connectivity",
                "operationId": "listClabernetesContainerlabDevV1Alpha1NamespacedConnectivity",
                "parameters": [
                    {
                        "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                        "in": "query",
                        "name": "allowWatchBookmarks",
                        "schema": {
                            "type": "boolean",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                        "in": "query",
                        "name": "continue",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                        "in": "query",
                        "name": "fieldSelector",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "in": "query",
                        "name": "labelSelector",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "in": "query",
                        "name": "resourceVersion",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "in": "query",
                        "name": "resourceVersionMatch",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                        "in": "query",
                        "name": "timeoutSeconds",
                        "schema": {
                            "type": "integer",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                        "in": "query",
                        "name": "watch",
                        "schema": {
                            "type": "boolean",
                            "uniqueItems": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivityList.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivityList.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "post": {
                "description": "create a Connectivity",
                "operationId": "createClabernetesContainerlabDevV1Alpha1NamespacedConnectivity",
                "parameters": [
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
                        "in": "query",
                        "name": "fieldManager",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
                        "in": "query",
                        "name": "fieldValidation",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivity.v1alpha1"
                            }
                        },
                        "application/yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivity.v1alpha1"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivity.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivity.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivity.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivity.v1alpha1"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivity.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivity.v1alpha1"
                                }
                            }
                        },
                        "description": "Accepted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "parameters": [
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                }
            ]
        },
        "/apis/clabernetes.containerlab.dev/v1alpha1/namespaces/{namespace}/connectivities/{name}": {
            "delete": {
                "description": "delete a Connectivity",
                "operationId": "deleteClabernetesContainerlabDevV1Alpha1NamespacedConnectivity",
                "parameters": [
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
                        "in": "query",
                        "name": "gracePeriodSeconds",
                        "schema": {
                            "type": "integer",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
                        "in": "query",
                        "name": "orphanDependents",
                        "schema": {
                            "type": "boolean",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                        "in": "query",
                        "name": "propagationPolicy",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
                            }
                        },
                        "application/yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            }
                        },
                        "description": "Accepted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "get": {
                "description": "read the specified Connectivity",
                "operationId": "readClabernetesContainerlabDevV1Alpha1NamespacedConnectivity",
                "parameters": [
                    {
                        "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "in": "query",
                        "name": "resourceVersion",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivity.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivity.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "patch": {
                "description": "partially update the specified Connectivity",
                "operationId": "patchClabernetesContainerlabDevV1Alpha1NamespacedConnectivity",
                "parameters": [
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
                        "in": "query",
                        "name": "fieldManager",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
                        "in": "query",
                        "name": "fieldValidation",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/apply-patch+yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
                            }
                        },
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
                            }
                        },
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivity.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivity.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "put": {
                "description": "replace the specified Connectivity",
                "operationId": "replaceClabernetesContainerlabDevV1Alpha1NamespacedConnectivity",
                "parameters": [
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
                        "in": "query",
                        "name": "fieldManager",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
                        "in": "query",
                        "name": "fieldValidation",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivity.v1alpha1"
                            }
                        },
                        "application/yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivity.v1alpha1"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivity.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivity.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivity.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.connectivity.v1alpha1"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "parameters": [
                {
                    "description": "name of the Connectivity",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                }
            ]
        },
        "/apis/clabernetes.containerlab.dev/v1alpha1/topologies": {
            "get": {
                "description": "list objects of kind Topology",
                "operationId": "listClabernetesContainerlabDevV1Alpha1TopologyForAllNamespaces",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.topologyList.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.topologyList.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "parameters": [
                {
                    "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                    "in": "query",
                    "name": "allowWatchBookmarks",
                    "schema": {
                        "type": "boolean",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "in": "query",
                    "name": "continue",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "in": "query",
                    "name": "fieldSelector",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "in": "query",
                    "name": "labelSelector",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "in": "query",
                    "name": "limit",
                    "schema": {
                        "type": "integer",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "in": "query",
                    "name": "resourceVersion",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "in": "query",
                    "name": "resourceVersionMatch",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                    "in": "query",
                    "name": "timeoutSeconds",
                    "schema": {
                        "type": "integer",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "in": "query",
                    "name": "watch",
                    "schema": {
                        "type": "boolean",
                        "uniqueItems": true
                    }
                }
            ]
        },
        "/apis/clabernetes.containerlab.dev/v1alpha1/namespaces/{namespace}/topologies": {
            "delete": {
                "description": "delete collection of Topology",
                "operationId": "deleteClabernetesContainerlabDevV1Alpha1CollectionNamespacedTopology",
                "parameters": [
                    {
                        "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                        "in": "query",
                        "name": "allowWatchBookmarks",
                        "schema": {
                            "type": "boolean",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                        "in": "query",
                        "name": "continue",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                        "in": "query",
                        "name": "fieldSelector",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "in": "query",
                        "name": "labelSelector",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "in": "query",
                        "name": "resourceVersion",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "in": "query",
                        "name": "resourceVersionMatch",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                        "in": "query",
                        "name": "timeoutSeconds",
                        "schema": {
                            "type": "integer",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                        "in": "query",
                        "name": "watch",
                        "schema": {
                            "type": "boolean",
                            "uniqueItems": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "get": {
                "description": "list objects of kind Topology",
                "operationId": "listClabernetesContainerlabDevV1Alpha1NamespacedTopology",
                "parameters": [
                    {
                        "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                        "in": "query",
                        "name": "allowWatchBookmarks",
                        "schema": {
                            "type": "boolean",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                        "in": "query",
                        "name": "continue",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                        "in": "query",
                        "name": "fieldSelector",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "in": "query",
                        "name": "labelSelector",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "in": "query",
                        "name": "resourceVersion",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "in": "query",
                        "name": "resourceVersionMatch",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                        "in": "query",
                        "name": "timeoutSeconds",
                        "schema": {
                            "type": "integer",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                        "in": "query",
                        "name": "watch",
                        "schema": {
                            "type": "boolean",
                            "uniqueItems": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.topologyList.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.topologyList.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "post": {
                "description": "create a Topology",
                "operationId": "createClabernetesContainerlabDevV1Alpha1NamespacedTopology",
                "parameters": [
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
                        "in": "query",
                        "name": "fieldManager",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
                        "in": "query",
                        "name": "fieldValidation",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/clabernetes-containerlab-dev.topology.v1alpha1"
                            }
                        },
                        "application/yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/clabernetes-containerlab-dev.topology.v1alpha1"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.topology.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.topology.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.topology.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.topology.v1alpha1"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.topology.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.topology.v1alpha1"
                                }
                            }
                        },
                        "description": "Accepted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "parameters": [
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                }
            ]
        },
        "/apis/clabernetes.containerlab.dev/v1alpha1/namespaces/{namespace}/topologies/{name}": {
            "delete": {
                "description": "delete a Topology",
                "operationId": "deleteClabernetesContainerlabDevV1Alpha1NamespacedTopology",
                "parameters": [
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
                        "in": "query",
                        "name": "gracePeriodSeconds",
                        "schema": {
                            "type": "integer",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
                        "in": "query",
                        "name": "orphanDependents",
                        "schema": {
                            "type": "boolean",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                        "in": "query",
                        "name": "propagationPolicy",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
                            }
                        },
                        "application/yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            }
                        },
                        "description": "Accepted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "get": {
                "description": "read the specified Topology",
                "operationId": "readClabernetesContainerlabDevV1Alpha1NamespacedTopology",
                "parameters": [
                    {
                        "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "in": "query",
                        "name": "resourceVersion",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.topology.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.topology.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "patch": {
                "description": "partially update the specified Topology",
                "operationId": "patchClabernetesContainerlabDevV1Alpha1NamespacedTopology",
                "parameters": [
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
                        "in": "query",
                        "name": "fieldManager",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
                        "in": "query",
                        "name": "fieldValidation",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/apply-patch+yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
                            }
                        },
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
                            }
                        },
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.topology.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.topology.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "put": {
                "description": "replace the specified Topology",
                "operationId": "replaceClabernetesContainerlabDevV1Alpha1NamespacedTopology",
                "parameters": [
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
                        "in": "query",
                        "name": "fieldManager",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
                        "in": "query",
                        "name": "fieldValidation",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/clabernetes-containerlab-dev.topology.v1alpha1"
                            }
                        },
                        "application/yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/clabernetes-containerlab-dev.topology.v1alpha1"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.topology.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.topology.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.topology.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.topology.v1alpha1"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "parameters": [
                {
                    "description": "name of the Topology",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                }
            ]
        },
        "/apis/clabernetes.containerlab.dev/v1alpha1/imagerequests": {
            "get": {
                "description": "list objects of kind Imagerequest",
                "operationId": "listClabernetesContainerlabDevV1Alpha1ImagerequestForAllNamespaces",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequestList.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequestList.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "parameters": [
                {
                    "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                    "in": "query",
                    "name": "allowWatchBookmarks",
                    "schema": {
                        "type": "boolean",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                    "in": "query",
                    "name": "continue",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                    "in": "query",
                    "name": "fieldSelector",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                    "in": "query",
                    "name": "labelSelector",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                    "in": "query",
                    "name": "limit",
                    "schema": {
                        "type": "integer",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "in": "query",
                    "name": "resourceVersion",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                    "in": "query",
                    "name": "resourceVersionMatch",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                    "in": "query",
                    "name": "timeoutSeconds",
                    "schema": {
                        "type": "integer",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                    "in": "query",
                    "name": "watch",
                    "schema": {
                        "type": "boolean",
                        "uniqueItems": true
                    }
                }
            ]
        },
        "/apis/clabernetes.containerlab.dev/v1alpha1/namespaces/{namespace}/imagerequests": {
            "delete": {
                "description": "delete collection of Imagerequest",
                "operationId": "deleteClabernetesContainerlabDevV1Alpha1CollectionNamespacedImagerequest",
                "parameters": [
                    {
                        "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                        "in": "query",
                        "name": "allowWatchBookmarks",
                        "schema": {
                            "type": "boolean",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                        "in": "query",
                        "name": "continue",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                        "in": "query",
                        "name": "fieldSelector",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "in": "query",
                        "name": "labelSelector",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "in": "query",
                        "name": "resourceVersion",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "in": "query",
                        "name": "resourceVersionMatch",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                        "in": "query",
                        "name": "timeoutSeconds",
                        "schema": {
                            "type": "integer",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                        "in": "query",
                        "name": "watch",
                        "schema": {
                            "type": "boolean",
                            "uniqueItems": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "get": {
                "description": "list objects of kind Imagerequest",
                "operationId": "listClabernetesContainerlabDevV1Alpha1NamespacedImagerequest",
                "parameters": [
                    {
                        "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.",
                        "in": "query",
                        "name": "allowWatchBookmarks",
                        "schema": {
                            "type": "boolean",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
                        "in": "query",
                        "name": "continue",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
                        "in": "query",
                        "name": "fieldSelector",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "in": "query",
                        "name": "labelSelector",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "in": "query",
                        "name": "resourceVersion",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "in": "query",
                        "name": "resourceVersionMatch",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.",
                        "in": "query",
                        "name": "timeoutSeconds",
                        "schema": {
                            "type": "integer",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
                        "in": "query",
                        "name": "watch",
                        "schema": {
                            "type": "boolean",
                            "uniqueItems": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequestList.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequestList.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "post": {
                "description": "create a Imagerequest",
                "operationId": "createClabernetesContainerlabDevV1Alpha1NamespacedImagerequest",
                "parameters": [
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
                        "in": "query",
                        "name": "fieldManager",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
                        "in": "query",
                        "name": "fieldValidation",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequest.v1alpha1"
                            }
                        },
                        "application/yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequest.v1alpha1"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequest.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequest.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequest.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequest.v1alpha1"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequest.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequest.v1alpha1"
                                }
                            }
                        },
                        "description": "Accepted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "parameters": [
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                }
            ]
        },
        "/apis/clabernetes.containerlab.dev/v1alpha1/namespaces/{namespace}/imagerequests/{name}": {
            "delete": {
                "description": "delete a Imagerequest",
                "operationId": "deleteClabernetesContainerlabDevV1Alpha1NamespacedImagerequest",
                "parameters": [
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
                        "in": "query",
                        "name": "gracePeriodSeconds",
                        "schema": {
                            "type": "integer",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
                        "in": "query",
                        "name": "orphanDependents",
                        "schema": {
                            "type": "boolean",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
                        "in": "query",
                        "name": "propagationPolicy",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
                            }
                        },
                        "application/yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
                                }
                            }
                        },
                        "description": "Accepted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "get": {
                "description": "read the specified Imagerequest",
                "operationId": "readClabernetesContainerlabDevV1Alpha1NamespacedImagerequest",
                "parameters": [
                    {
                        "description": "resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset",
                        "in": "query",
                        "name": "resourceVersion",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequest.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequest.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "patch": {
                "description": "partially update the specified Imagerequest",
                "operationId": "patchClabernetesContainerlabDevV1Alpha1NamespacedImagerequest",
                "parameters": [
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
                        "in": "query",
                        "name": "fieldManager",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
                        "in": "query",
                        "name": "fieldValidation",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/apply-patch+yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
                            }
                        },
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
                            }
                        },
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequest.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequest.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "put": {
                "description": "replace the specified Imagerequest",
                "operationId": "replaceClabernetesContainerlabDevV1Alpha1NamespacedImagerequest",
                "parameters": [
                    {
                        "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
                        "in": "query",
                        "name": "dryRun",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.",
                        "in": "query",
                        "name": "fieldManager",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    },
                    {
                        "description": "fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields, provided that the `ServerSideFieldValidation` feature gate is also enabled. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23 and is the default behavior when the `ServerSideFieldValidation` feature gate is disabled. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default when the `ServerSideFieldValidation` feature gate is enabled. - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.",
                        "in": "query",
                        "name": "fieldValidation",
                        "schema": {
                            "type": "string",
                            "uniqueItems": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequest.v1alpha1"
                            }
                        },
                        "application/yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequest.v1alpha1"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequest.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequest.v1alpha1"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequest.v1alpha1"
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/clabernetes-containerlab-dev.imagerequest.v1alpha1"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": []
            },
            "parameters": [
                {
                    "description": "name of the Imagerequest",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                },
                {
                    "description": "If 'true', then the output is pretty printed.",
                    "in": "query",
                    "name": "pretty",
                    "schema": {
                        "type": "string",
                        "uniqueItems": true
                    }
                }
            ]
        }
    }
}