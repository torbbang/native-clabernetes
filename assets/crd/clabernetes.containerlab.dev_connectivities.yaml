---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: connectivities.clabernetes.containerlab.dev
spec:
  group: clabernetes.containerlab.dev
  names:
    kind: Connectivity
    listKind: ConnectivityList
    plural: connectivities
    singular: connectivity
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          Connectivity is an object that holds information about a connectivity between launcher pods in
          a clabernetes Topology.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ConnectivitySpec is the spec for a Connectivity resource.
            properties:
              pointToPointTunnels:
                additionalProperties:
                  items:
                    description: |-
                      PointToPointTunnel holds information necessary for creating a tunnel between two interfaces on
                      different nodes of a clabernetes Topology. This connection can be established by using clab tools
                      using VXLAN tunnels.
                    properties:
                      destination:
                        description: Destination is the destination service to connect
                          to (qualified k8s service name).
                        type: string
                      localInterface:
                        description: LocalInterface is the local termination of this
                          tunnel.
                        type: string
                      localNode:
                        description: |-
                          LocalNodeName is the name (in the clabernetes topology) of the local node for this side of
                          the tunnel.
                        type: string
                      remoteInterface:
                        description: |-
                          RemoteInterface is the remote termination interface of this tunnel -- necessary to store so
                          can properly align tunnels (and ids!) between nodes; basically to know which tunnels are
                          "paired up".
                        type: string
                      remoteNode:
                        description: |-
                          RemoteNode is the name (in the clabernetes topology) of the remote node for this side of the
                          tunnel.
                        type: string
                      tunnelID:
                        description: TunnelID is the id number of the tunnel (vnid
                          or segment id).
                        type: integer
                    required:
                    - destination
                    - localInterface
                    - localNode
                    - remoteInterface
                    - remoteNode
                    - tunnelID
                    type: object
                  type: array
                description: |-
                  PointToPointTunnels holds point-to-point connectivity information for a given topology. The
                  mapping is nodeName (i.e. srl1) -> p2p tunnel data. Both sides of the tunnel should be able
                  to use this information to establish connectivity between Topology nodes.
                type: object
            required:
            - pointToPointTunnels
            type: object
          status:
            description: ConnectivityStatus is the status for a Connectivity resource.
            type: object
        type: object
    served: true
    storage: true
