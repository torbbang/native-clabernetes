apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/name: topology-basic-srl1
    clabernetes/app: clabernetes
    clabernetes/name: topology-basic-srl1
    clabernetes/topologyNode: srl1
    clabernetes/topologyOwner: topology-basic
  name: topology-basic-srl1
  namespace: NAMESPACE
  ownerReferences:
    - apiVersion: clabernetes.containerlab.dev/v1alpha1
      kind: Topology
      name: topology-basic
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: topology-basic-srl1
      clabernetes/app: clabernetes
      clabernetes/name: topology-basic-srl1
      clabernetes/topologyNode: srl1
      clabernetes/topologyOwner: topology-basic
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: topology-basic-srl1
        clabernetes/app: clabernetes
        clabernetes/name: topology-basic-srl1
        clabernetes/topologyNode: srl1
        clabernetes/topologyOwner: topology-basic
    spec:
      containers:
        - command:
            - /clabernetes/manager
            - launch
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: APP_NAME
              value: clabernetes
            - name: MANAGER_NAMESPACE
              value: clabernetes
            - name: LAUNCHER_CRI_KIND
              value: containerd
            - name: LAUNCHER_IMAGE_PULL_THROUGH_MODE
              value: auto
            - name: LAUNCHER_LOGGER_LEVEL
              value: debug
            - name: LAUNCHER_TOPOLOGY_NAME
              value: topology-basic
            - name: LAUNCHER_NODE_NAME
              value: srl1
            - name: LAUNCHER_NODE_IMAGE
              value: ghcr.io/nokia/srlinux
            - name: LAUNCHER_CONNECTIVITY_KIND
              value: vxlan
            - name: LAUNCHER_CONTAINERLAB_VERSION
            - name: LAUNCHER_CONTAINERLAB_TIMEOUT
            - name: LAUNCHER_PRIVILEGED
              value: "true"
          imagePullPolicy: IfNotPresent
          name: srl1
          ports:
            - containerPort: 14789
              name: vxlan
              protocol: UDP
              protocol: TCP
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
          securityContext:
            privileged: true
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /clabernetes/topo.clab.yaml
              name: topology-basic-config
              readOnly: true
              subPath: srl1
            - mountPath: /clabernetes/files-from-url.yaml
              name: topology-basic-config
              readOnly: true
              subPath: srl1-files-from-url
            - mountPath: /clabernetes/configured-pull-secrets.yaml
              name: topology-basic-config
              readOnly: true
              subPath: configured-pull-secrets
            - mountPath: /var/lib/docker
              name: docker
            - mountPath: /clabernetes/.node/containerd.sock
              name: cri-sock
              readOnly: true
              subPath: containerd.sock
          workingDir: /clabernetes
      dnsPolicy: ClusterFirst
      hostname: srl1
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: clabernetes-launcher-service-account
      serviceAccountName: clabernetes-launcher-service-account
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 493
            name: topology-basic
          name: topology-basic-config
        - emptyDir: {}
          name: docker
        - hostPath:
            path: /run/containerd
            type: ""
          name: cri-sock
status: {}
